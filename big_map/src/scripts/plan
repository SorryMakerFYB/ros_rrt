1.建立地图（增量更新）并 订阅Gazeobo/odom


2.移殖rrt算法，（global detector）
3.检测到的点给local planer（订阅odom位置和map）
4.local planer 输出的cmd_vel 给gaezbo去运动。


gazebo：车urdf模型 可以订阅cmd_vel 输出是 gazebo/odom

地图维护：发布一个增量更新地图
订阅odom获得pose
根据odom更新地图
发布

global detector：订阅：/map 输出:way_points

local detector:订阅/map /odom.pose 输出：way_points

local planer: 订阅 /map /odom /way_points
输出：cmd_vel给gazebo


1.地图，到底发布在哪里：map_updates可不可以用，必须是occupancygrid格式。想到了，写一个node发布一个数组free[]，里面是校车的pose和附近的点然后mappub的node
去访问每一个点，涂白，再发布。 完成了

2.搞清楚urdf 怎么接受cmd_vel 加入odom组件 完成了

3.自己写或者调包rrt
都是狗皮，我自己写rrt然后直接手动过去


1.找一个urdf文件，不需要多复杂 base_link就可以，不是xacro也可以。

2.有一个控制器，发布odom消息，最好是gazebo插件，会发布odom话题。

3.在rviz和gazebo中生成机器人。

4.在namespace中注意命名，接入filter和assigner.



1.xacro不能读取robot_decription：需要先创建一个ARG MODEL=“.URDF.XACRO”
2.namespace 不能操作 gazebo插件发布的话题：需要把xacro里面gazebo插件的namesapce的那一项去掉，不然只能设置固定namespace了。




1.边缘检测，订阅odom位置，切割比半径大的区域去探测。
2.设置costfuntion去选择最合适的点。
3.move_base send_goal()
4.costfunction加上航向
pose.x pose.y pose.theta
center.x center.y  
self.theta

cost:  theta（pose.theta,center）*dis(pose,center)

主机：先到达的，决定并分配中心点（centroids）

行进过程，尽量避免进入 威胁区域

occupancygrip[2]=255 
(地图赋值成255)

inflation layer 设一下

(danger.x danger.y)

cmd_vel x=1 z=0.5

closeEnough(pose1,pose2,pose3)



实验指标：1.覆盖率  数格子
        2.全覆盖时间 sys.time 
        3.路经重复比例 
        4.每个机器人路径长度 

过程中无人机增减对比。

每个时间步骤 画图 0s, 50s 100s





现在要干的事情：
1.边缘点标注颜色(只标注属于给定区域内的)
2.小车换颜色（xacro）
3.开会机制：3.1确定开会时间：assignflag 有三个状态 0在开 1在探索 2时间到回去开会 这边时间到用0结束赋值初始值，1探索一直获取现在的时间去减去初始时间
          3.2确定开会地点 这个要等会取得中心点的中心点去开
4.对融合后的地图分区：这个得对 merge_map 用转换 map.data=-1的 就转换坐标然后交给k_means 得到的再发布 这个全写在assigner里面
5.地图赋值颜色，这个可能也可以实现，有时间再搞


marker size大一点
出现的问题：
1.有时候边缘点说越界了。frame 解决了，是类定义问题。
2.小车会停下来转弯 (触发了，recovery_behavior,能不能不恢复动作)move_base 参数可能会导致
3.边缘点一格偏移（floor（））取上界 分辨率的问题

4.导航到出地图边界的位置了。（还没搞清楚，也是movebase参数问题）
5.涂白的地图，在边界的时候可能越界。（更新函数要改进）
6.movebase参数调苛刻了，就直接停下来了（看看能不能双重发布）

有人睡觉，我先大字把
就是，这个停下来的原因是什么，我一直在看，这是最关键的
他的状态是在接受目标，但是可能算不出来路径，或者是一直在给点他一直在算？
然后我又查是不是一直在恢复动作转圈，好像也不是，
有时候是开始就停肋，有时候是跑了一圈就停了，状态都是 1 ，说是刚接收到目标
我还是换个耳机把。